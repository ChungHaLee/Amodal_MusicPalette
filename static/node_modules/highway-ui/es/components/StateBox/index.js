var _excluded = ["state", "image", "className", "description", "children"];

var _States, _pngMaps, _textMaps;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import { Spin, Empty } from 'antd';
import cx from 'classnames';
import './index.less';
import errorPng from './imgs/error.png';
import noDataPng from './imgs/noData.png';
import noPermissionPng from './imgs/noPermission.png';
import searchNoDataPng from './imgs/searchNoData.png';
import vedioErrorPng from './imgs/vedioError.png';
import vedioNotSupportPng from './imgs/vedioNotSupport.png';
var States = (_States = {}, _defineProperty(_States, "noData", 'noData'), _defineProperty(_States, "error", 'error'), _defineProperty(_States, "loading", 'loading'), _defineProperty(_States, "noPermission", 'noPermission'), _defineProperty(_States, "searchNoData", 'searchNoData'), _defineProperty(_States, "vedioError", 'vedioError'), _defineProperty(_States, "vedioNotSupport", 'vedioNotSupport'), _States);
var pngMaps = (_pngMaps = {}, _defineProperty(_pngMaps, States.noData, noDataPng), _defineProperty(_pngMaps, States.error, errorPng), _defineProperty(_pngMaps, States.noPermission, noPermissionPng), _defineProperty(_pngMaps, States.searchNoData, searchNoDataPng), _defineProperty(_pngMaps, States.vedioError, vedioErrorPng), _defineProperty(_pngMaps, States.vedioNotSupport, vedioNotSupportPng), _pngMaps);
var textMaps = (_textMaps = {}, _defineProperty(_textMaps, States.noData, '暂无数据'), _defineProperty(_textMaps, States.error, '系统错误'), _defineProperty(_textMaps, States.noPermission, '权限问题'), _defineProperty(_textMaps, States.searchNoData, '搜索无结果'), _defineProperty(_textMaps, States.vedioError, '加载失败'), _defineProperty(_textMaps, States.vedioNotSupport, '不支持预览'), _textMaps);

var StateBox = function StateBox(_ref) {
  var _ref$state = _ref.state,
      state = _ref$state === void 0 ? States.loading : _ref$state,
      image = _ref.image,
      className = _ref.className,
      _ref$description = _ref.description,
      description = _ref$description === void 0 ? '' : _ref$description,
      children = _ref.children,
      restProps = _objectWithoutProperties(_ref, _excluded);

  var wrapClassName = cx('state-box-wrapper');
  var classNames = cx('stateBox', className);

  if (state === States.loading) {
    return /*#__PURE__*/React.createElement("div", {
      className: wrapClassName
    }, /*#__PURE__*/React.createElement(Spin, null));
  }

  return /*#__PURE__*/React.createElement("div", {
    className: classNames
  }, /*#__PURE__*/React.createElement(Empty, _objectSpread({
    image: image || pngMaps[state],
    description: description || textMaps[state]
  }, restProps), children));
};

export default StateBox;